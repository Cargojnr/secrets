<%- include('layout') %> 

<style>
  #gift-container {
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 200px;
      height: 200px;
  }

  /* Neon Rays Effect */
  #neon-rays {
      position: absolute;
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(255, 0, 255, 0.6) 10%, rgba(0, 255, 255, 0.3) 60%, transparent 100%);
      border-radius: 50%;
      filter: blur(25px);
      opacity: 0;
      transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
  }

  /* Gift Box Image */
  #gift-img {
      width: 150px;
      cursor: pointer;
  }

  /* Animation when gift is opened */
  .open-box {
      transform: scale(1.1);
      animation: shake 0.6s ease-in-out;
  }

  /* Keyframe for shaking effect */
  @keyframes shake {
      0% { transform: translateY(0); }
      25% { transform: translateY(-5px); }
      50% { transform: translateY(5px); }
      75% { transform: translateY(-3px); }
      100% { transform: translateY(0); }
  }

  /* Keyframe for Neon Glow */
  @keyframes neonGlow {
      0% { opacity: 0; transform: scale(0.8); }
      50% { opacity: 1; transform: scale(1.2); }
      100% { opacity: 0; transform: scale(1.5); }
  }

  .glow-effect {
      animation: neonGlow 1.2s ease-out;
  }


/* Apply your shake & jump animation class */
.animated-box {
    animation: your-animation 1s ease-in-out;
}

/* Secret Card Styles */
#secret-card {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.6);
    width: 320px;
    padding: 20px;
    background: white;
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
    z-index: 100;
}

/* Active State (pops up) */
.show-secret {
    display: block;
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

/* Overlay Background */
#overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 90;
}

/* Close Button */
#close-secret {
    position: absolute;
    top: 10px;
    right: 10px;
    background: transparent;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: #555;
}




</style>

<body data-theme="<%= theme %>" data-mode="<%= mode %>">

  <script>
    socket.on('new-secret', (data) => {
        // Display a modern toast notification
        const notification = document.createElement('div');
        notification.innerText = `New secret shared: ${data.secret}`;
        notification.style.position = 'fixed';
        notification.style.bottom = '10px';
        notification.style.right = '10px';
        notification.style.backgroundColor = '#4caf50';
        notification.style.color = '#fff';
        notification.style.padding = '10px';
        notification.style.borderRadius = '5px';
        document.body.appendChild(notification);

        // Remove notification after 5 seconds
        setTimeout(() => notification.remove(), 5000);
    });
</script>

  <div class="jumbotron text-center">
    <div class="container">
      <!-- <i class="fas fa-key fa-6x"></i> -->
      <form id="pinned-secret" method="GET"  style="margin-bottom: 20px !important; text-align: center;"></form>
      <center>
        <h1 class="display-3">You've pocknosed a Gist!</h1>
        <p>Don't kiss and tell</p>
      </center>

      

      <% if (locals.secret) { %>
        <ul id="secrets">
          <!-- <h2>Secret</h2> -->
           <!-- <br> -->
          <li class="secret">
            <div class="card" style="border: 1px solid #ddd;  border-radius: 30px">
              <small>~~ @anonym<%= secret.user_id %> ~~</small>
              <p>
                <%= secret.secret %>
              </p>


              <div class="comment-section" data-secret-id="<%= secret.id %>">
                <button id="commentButton">Comment</button>
                <div class="comment-dropdown" id="commentDropdown">
                  <form class="comment-display" method="POST" id="commentDisplay">
                    <% if (locals.comments) { %>
                      <ul id="comments">
                        <p class="total">All comments: <%= totalComments %>
                        </p>
                        <% comments.reverse().forEach((comment)=> { %>
                          <li class="comment-item">
                            <div>
                              <small class="user"><strong>@anonym<%= comment.user_id %></strong></small>
                              <p class="comment">
                                <%= comment.comment %>
                              </p>
                            </div>
                            <!-- <button formaction="/reply">reply</button> -->
                          </li>
                          <% }) %>
                      </ul>
                      <% } else if(locals.noComment) {%>
                        <p>
                          <%= noComment %>
                        </p>
                        <% } %>
                  </form>
                  <form action="/comment" method="POST" id="comment-form">
                    <input type="hidden" name="id" id="secretId" value="<%= secret.id %>" />
                    <input type="hidden" name="secretUserId" value="<%= secret.user_id %>" />
                    <input type="hidden" name="commentUserId" value="<%= userId %>" />
                    <div class="reply">
                      <% if(locals.reply){ %>
                        <div>
                          <small class="user"><strong>Reply to @anonym<%= comment.user_id %></strong></small>
                          <p class="comment">
                            <%= comment.comment %>
                          </p>
                        </div>
                        <button><i class="fas fa-xmark"></i></button>
                        <% } %>
                    </div>
                    <textarea id="commentInput" placeholder="Write a comment..." name="comment"></textarea>
                    <!-- <input type="text" id="commentInput" placeholder="Write a comment" name="comment"> -->
                    <button id="postCommentButton">Post</button>
                    <% if (locals.message) { %>
                      <small><%= message %></small>
                    <% } %>
                  </form>
                </div>
              </div>

             <div class="secret-card" data-id="<%= secret.id %>">
              <div class="reactions">
                <button class="reaction-btn" data-type="like">üëç <span class="reaction-count"><%= secret.reactions.like ?  secret.reactions.like.count  : 0 %></span></button>
                <button class="reaction-btn" data-type="laugh">üòÇ <span class="reaction-count"><%= secret.reactions.laugh ?  secret.reactions.laugh.count  : 0 %></span></button>
                <button class="reaction-btn" data-type="cry">üò¢ <span class="reaction-count"><%= secret.reactions.cry ?  secret.reactions.cry.count  : 0 %></span></button>
                <button class="reaction-btn" data-type="gasp">üò± <span class="reaction-count"><%= secret.reactions.gasp ?  secret.reactions.gasp.count  : 0 %></span></button>
            </div>
          </div>
          
          <button class="report-btn" data-id="<%= secret.id %>">Report</button>

            </div>
          </li>
        </ul>
        
        <br>

        <a href="/submit"  style="margin-left: .5rem !important;" class="btn btn-dark secret-btn" role="button">Share a Gist</a>

        <hr style="margin-top: 2rem;">

        <div id="related-gist">
          <h2 class="display-3">Catch on Similar 
            <% if (locals.relatedGist) { %>
                <span style="text-transform: capitalize;"><%= relatedGist[0].category%></span>
                          <% } %>

             Aproko passing by</h2>
          <div class="related">
            <% if (locals.relatedGist) { %>
              <ul id="secrets">
                <% relatedGist.forEach((related)=> { %>
                  <li class="secret">
                    <div class="trend-box card">
                      <% if (secret.category=="funny" ) { %>
                        <span class="tag funny"><i class="fas fa-laugh"></i></span>
                        <% } else if (secret.category=="love" ) { %>
                          <span class="tag love"><i class="fas fa-heart"></i></span>
                          <% } else if (secret.category=="nasty" ) { %>
                            <span class="tag nasty"><i class="fas fa-skull-crossbones"></i></span>
                            <% } else if (secret.category=="sassy" ) { %>
                              <span class="tag sassy"><i class="fas fa-face-meh"></i></span>
                              <% } else if (secret.category=="hilarious" ) { %>
                                <span class="tag hilarious"><i class="fas fa-teeth-open"></i></span>
                                <% } else if (secret.category=="random" ) { %>
                                  <span class="tag random"><i class="fas fa-shuffle"></i></span>
                                  <% } else { %>
                                    <span class="tag random"><i class="fas fa-shuffle"></i></span>
                                    <% } %>

                      <p>
                        <span class="content">
                          <% if (related.secret.split(" ").length > 20) { %>
                      <%= related.secret.substring(0, 50) + " ..." %>
                            <% } else { %>
                              <%= related.secret.substring(0, 50) + "..." %>
                                <% } %>
                        </span>
                      </p>

                      <small style="text-align: right !important;"> ~~amebo<%= related.user_id%>~~</small>

                      <a class="read" href="../secret/<%= related.id %>">Pokenose</a>
                    </div>

                  </li>
                  <% }); %>

              </ul>
              <% } %>
          </div>
        </div>
        <% } %>
         
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function () {
      $("#comment-form").on("submit", function (e) {
        e.preventDefault(); // Prevent the form from submitting the traditional way

        const secretId = $("#secretId").val();
        const secretUserId = $('[name="secretUserId"]').val();
        const commentUserId = $('[name="commentUserId"]').val();
        const comment = $("#commentInput").val();
        const commentButton = document.querySelectorAll("#commentButton");
      const commentDropdown = document.getElementById("commentDropdown");
      const postCommentButton = document.getElementById("postCommentButton");
      const commentInput = document.getElementById("commentInput");
      const commentDisplay = document.getElementById("commentDisplay");

        $.ajax({
          url: "/comment",
          type: "POST",
          data: {
            id: secretId,
            secretUserId: secretUserId,
            commentUserId: commentUserId,
            comment: comment,
          },
          success: async function (response) {
            // Append the new comment to the commentDisplay div
            if (response.success) {
              const newComment = `
                        <li class="comment-item">
                            <div>
                              <small class="user"><strong>@anonym${commentUserId}</strong></small>
                              <p class="comment">
                                ${comment}
                              </p>
                            </div>
                            <!-- <button formaction="/reply">reply</button> -->
              </li>
                    `;
              $("#comments").append(newComment);

              // Clear the comment input
              $("#commentInput").val("");

              try {
        const response = await fetch(`/secret/${secretId}`);
        if (!response.ok) {
          throw new Error("Failed to fetch secrets");
        }

        const data = await response.json();
        const comments = data.comments;
        const secret = data.secret
        console.log(secret)
        let commentDisp;
        if (comments) {
          commentDisp = comments.map(
            (comment) =>
              `<li class="comment-item">
                            <div>
                              <small class="user"><strong>@anonym${comment.user_id}</strong></small>
                              <p class="comment">
                                ${comment.comment}
                              </p>
                            </div>
                            <!-- <button formaction="/reply">reply</button> -->
              </li>`
          );

          commentDisplay.innerHTML = `
              <ul id="comments">
                        <p class="total">All comments: ${data.totalComments}
                        </p>
                       ${commentDisp}
                      </ul>
                            `;
        } else {
          commentDisplay.innerHTML = `
              <ul id="comments">
                        <p class="total"> ${data.noComment}
                        </p>
                      </ul>
                            `;
        }
      } catch (err) {
        console.log(err);
      }



            } else {
              console.log("Failed to post comment:", response.message);
            }
          },
          error: function (err) {
            console.log("Error submitting comment:", err);
          },
        });
      });
    });
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      const commentButton = document.querySelectorAll("#commentButton");
      const commentDropdown = document.getElementById("commentDropdown");
      const postCommentButton = document.getElementById("postCommentButton");
      const commentInput = document.getElementById("commentInput");
      const commentDisplay = document.getElementById("commentDisplay");
      const secretId = document.getElementById("secretId").value;


      try {
        const response = await fetch(`/more/${secretId}`);
        if (!response.ok) {
          throw new Error("Failed to fetch secrets");
        }

        const data = await response.json();
        const comments = data.comments;
        // console.log(data.noComment)
        let commentDisp;
        if (comments) {
          commentDisp = comments.map(
            (comment) =>
              `<li class="comment-item">
                            <div>
                              <small class="user"><strong>@anonym${comment.user_id}</strong></small>
                              <p class="comment">
                                ${comment.comment}
                              </p>
                            </div>
              </li>`
              
          );
          
          commentDisplay.innerHTML = `
              <ul id="comments">
                        <p class="total">All comments: ${data.totalComments}
                        </p>
                       ${commentDisp}
                      </ul>
                            `

       
        } else {
          commentDisplay.innerHTML = `
              <ul id="comments">
                        <p class="total">${data.noComment}
                        </p>
                      </ul>
                            `;
        }
      } catch (err) {
        console.log(err);
      }


      // Toggle comment dropdown visibility
      commentButton.forEach((button) => {
        button.addEventListener("click",() => {
          commentDropdown.classList.toggle("active");


          if (commentDropdown.classList.contains("active")) {
            button.innerHTML = "Close Comments";
          } else {
            button.innerHTML = "Comments";
          }

          // commentInput.focus();
        });
      });


      const header = document.querySelector("header");
      const nextSection = document
        .querySelector("body")
        .querySelector("section:not(.active)");
      const logo = document.getElementById("logo");

      window.addEventListener("scroll", function () {
        const scrolled = window.scrollY > 0;
        if (scrolled) {
          let body = document.querySelector("body");
          body.style.overflowY = "scroll";
          header.classList.add("scrolled");
        } else {
          header.classList.remove("scrolled");
        }
      });
    });

    window.onload = function () {
            if(commentInput.hasAttribute('autofocus')){
              commentInput.removeAttribute('autofocus')
            }
            setTimeout(() => {
            commentInput.blur();
        }, 0);
        }

document.querySelectorAll('.reaction-btn').forEach((button) => {
    button.addEventListener('click', async (event) => {
        const btn = event.target.closest('.reaction-btn');
        const type = btn.getAttribute('data-type');
        const secretCard = btn.closest('.secret-card');
        const secretId = secretCard.getAttribute('data-id');

        try {
            const response = await fetch(`/secret/${secretId}/react`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ type }),
            });

            const data = await response.json();

            if (data.success) {
                const countSpan = btn.querySelector('.reaction-count');
                countSpan.textContent = data.reactions[type].count || 0; // Use updated count from server
            } else {
                console.error('Failed to update reactions:', data.error);
            }
        } catch (error) {
            console.error('Error updating reactions:', error);
        }
    });
});


document.querySelector('.report-btn').addEventListener('click', async (e) => {
        const secretId = e.target.getAttribute('data-id');
        const reason = prompt('Why are you reporting this content?'); // Ask for the reason

        if (reason) {
            try {
                const response = await fetch(`/report/secret/${secretId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ reason })
                });

                const data = await response.json();
                if (data.success) {
                    alert('Thank you for reporting. We will review it shortly.');
                } else {
                    alert('Error reporting content');
                }
            } catch (error) {
                console.error('Error reporting:', error);
            }
        }
    });


  </script>

  <script>
        const fetchTopDiscussedSecret = async () => {
try {
  const response = await fetch('/top-discussed');
  const data = await response.json();
  const topSecret = data.topSecret

  if (data.success) {
      showAnnouncement(topSecret);
      // console.log(secret.secret)
  } else {
      console.log('No trending secret to display.');
  }
} catch (error) {
  console.error('Error fetching top discussed secret:', error);
}
};

const pinSecret = (topSecret) => {
    const pinnedSection = document.getElementById('pinned-secret');
    pinnedSection.innerHTML = `
        <button formaction="/secret/${topSecret.id}" class="pin-card">
            <p>${topSecret.secret.substring(0, 250 ) + "..."}</p>
            <small>~~@anonym${topSecret.user_id}~~</small>
            <i class="fas fa-thumbtack pinned"></i>
        </button>
    `;

    // Set a timeout to unpin the secret after 24 hours
    setTimeout(() => {
        pinnedSection.innerHTML = '';
    }, 24 * 60 * 60 * 1000); // 24 hours
};


// Schedule the announcement at 12:00 PM GMT
const now = new Date();
const targetTime = new Date();
targetTime.setUTCHours(12, 0, 0, 0); // 12:00 PM GMT
const timeUntilAnnouncement = targetTime - now;

setTimeout(fetchTopDiscussedSecret, timeUntilAnnouncement);
  </script>

  <script src="/js/app.js"></script>
  <% if (locals.theme) { %>
    <script src="/js/theme.js"></script>
  <% } else {%>
    <script src="/js/defaultTheme.js"></script>
    <% } %>
</body>